# cat << EOF > /dev/null
# https://github.com/gpakosz/.tmux
# (‑●‑●)> dual licensed under the WTFPL v2 license and the MIT license,
#         without any warranty.
#         Copyright 2012— Gregory Pakosz (@gpakosz).
# /!\ do not edit this file
#     instead, override settings in ~/.tmux.conf.local, see README.md


# -- general -------------------------------------------------------------------

set -g default-terminal "tmux-256color"
set -ag terminal-overrides ",xterm-256color:RGB"

setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on

set -g prefix C-a                        # GNU-Screen compatible prefix

unbind-key C-b
bind C-a send-prefix

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 5000                 # boost history

# reload configuration
bind r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'


# -- display -------------------------------------------------------------------

set -g base-index 1         # start windows numbering at 1
setw -g pane-base-index 1   # make pane numbering consistent with windows

setw -g automatic-rename on # rename window to reflect current program
set -g renumber-windows on  # renumber windows when a window is closed

set -g set-titles on                        # set terminal title
set -g set-titles-string '#h ❐ #S ● #I #W'

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

# -- Theme ---------------------------------------------------------------------
set -g status-justify "left"
set -g status-left-length "100"
set -g status "on"
set -g status-right-length "160"
set -g status-right-style none
set -g message-style bg=colour2,fg=colour0
set -g status-style none
set -g pane-border-style bg=default
set -g pane-active-border-style bg=default,fg=colour2
set -g pane-border-style fg=colour240
set -g status-left-style none
setw -g window-status-style bg=default,fg=colour242,none
setw -g window-status-current-style bg=default,fg=colour242
setw -g window-status-activity-style fg=colour2,none
setw -g window-status-separator ""
set -g status-left "#[fg=colour60] #S #[fg=colour2,nobold,nounderscore,noitalics]"
set -g status-right "#{prefix_highlight} #[fg=colour0,nobold,nounderscore,noitalics] #[fg=colour60] #[fg=colour60]| %R - %d-%m-%Y"
setw -g window-status-format "#[fg=colour60,nobold,nounderscore,noitalics] #[fg=colour60] #I #W #[fg=colour0,nobold,nounderscore,noitalics]"
setw -g window-status-current-format "#[fg=colour0,nobold,nounderscore,noitalics] #[fg=colour9] #I #W #[fg=colour0,nobold,nounderscore,noitalics]"


# -- navigation ----------------------------------------------------------------

# split current window horizontally
bind - split-window -v
# split current window vertically
bind _ split-window -h

# pane navigation
bind -r h select-pane -L  # move left
bind -r j select-pane -D  # move down
bind -r k select-pane -U  # move up
bind -r l select-pane -R  # move right
#bind > swap-pane -D       # swap current pane with the next one
#bind < swap-pane -U       # swap current pane with the previous one

# maximize current pane
bind + run 'cut -c3- ~/.tmux.conf | sh -s _maximize_pane "#{session_name}" #D'

# pane resizing
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# window navigation
unbind n
unbind p
bind -r C-h previous-window # select previous window
bind -r C-l next-window     # select next window
bind Tab last-window        # move to last active window

# toggle mouse
bind m run "cut -c3- ~/.tmux.conf | sh -s _toggle_mouse"

# -- copy mode -----------------------------------------------------------------

bind Enter copy-mode # enter copy mode

# copy to Mac OSX clipboard
if -b 'command -v reattach-to-user-namespace > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
# copy to X11 clipboard
if -b 'command -v xsel > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xsel -i -b"'
if -b '! command -v xsel > /dev/null 2>&1 && command -v xclip > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | xclip -i -selection clipboard >/dev/null 2>&1"'
# copy to Windows clipboard
if -b 'command -v clip.exe > /dev/null 2>&1' 'bind y run -b "tmux save-buffer - | clip.exe"'
if -b '[ -c /dev/clipboard ]' 'bind y run -b "tmux save-buffer - > /dev/clipboard"'
